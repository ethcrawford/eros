
/* Configs
------------------------------------------------*/
flx-max-width = 1110px
flx-margin = 15px
flx-padding = 15px
flx-column_number = 12
flx-column_width = (100% / flx-column_number) - 2 * flx-margin

/*
$arrayName = value0, value1, value2
$arrayName[1] //value1
*/
$colFlexToggle = 'off'
$arrayCol   = 1 2 3 4 5 6 7 8 9 10 11 12
$arrayColSm = 1 2 3 4 5 6 7 8 9 10 11 12
$arrayColMd = 1 2 3 4 5 6 7 8 9 10 11 12
$arrayColLg = 1 2 3 4 5 6 7 8 9 10 11 12
$arrayColXl = 1 2 3 4 5 6 7 8 9 10 11 12

// start end center between around
$arrayJustify   = 'start' 'end' 'center' 'between' 'around'
$arrayJustifySm = 'start' 'end' 'center' 'between' 'around'
$arrayJustifyMd = 'start' 'end' 'center' 'between' 'around'
$arrayJustifyLg = 'start' 'end' 'center' 'between' 'around'
$arrayJustifyXl = 'start' 'end' 'center' 'between' 'around'

$arrayAlign
$arrayAlignSm = 'start' 'end' 'center'
$arrayAlignMd = 'start' 'end' 'center'
$arrayAlignLg = 'start' 'end' 'center'
$arrayAlignXl = 'start' 'end' 'center'


$margin
  margin-right flx-margin
  margin-left @margin-right

$padding
  padding-right flx-padding
  padding-left @padding-right

// mixin
make-container()
  width 100%
  margin-right auto
  margin-left @margin-right
  @extend $padding

// extends the mixin :)
.container
.container-fluid
  make-container()


/* Row
------------------------------------------------*/
.row
  margin-right -1 * flx-padding
  margin-left @margin-right
  display flex
  flex-wrap wrap

/* Columns
------------------------------------------------*/

// mixin
make-column(width-factor)
  if (width-factor is a 'unit')
    width 100%
    max-width floor((100% / flx-column_number * width-factor), 10)
    flex 0 0 @max-width

  if (number-of-cols == flex)
    width 100%
    max-width 100%
    flex-basis 0
    flex-grow 1

  if (numbers-of-cols == auto)
    max-width none
    width auto
    flex 0 0 auto

  min-height 1px
  position relative
  @extend $padding

// extends the mixin :)
if $colFlexToggle == 'on'
  .col-flex
    make-column(flex)



for i in $arrayCol
  .col-{i}
    make-column(i)

@media (min-width: 576px)
  for i in $arrayColSm
    .col-sm-{i}
      make-column(i)

@media (min-width: 768px)
  for i in $arrayColMd
    .col-md-{i}
      make-column(i)

@media (min-width: 992px)
  for i in $arrayColLg
    .col-lg-{i}
      make-column(i)

@media (min-width: 1200px)
  for i in $arrayColXl
    .col-xl-{i}
      make-column(i)

// for media queries
mq-col(number-of-cols)
    width (number-of-cols * flx-column_width) + (((number-of-cols - 1) * 2) * flx-margin)

/* Offset
------------------------------------------------*/

// mixin
mq-offset(number-of-offset = 0)
    margin-left (number-of-offset * flx-column_width) + (((number-of-offset - 1) * 2) * flx-margin) + (3 * flx-margin)

// extends the mixin :)
for i in (0..(flx-column_number - 1))
    $offset-{i}
        mq-offset(i)

/* Flex Container
------------------------------------------------*/

// mixin
mq-justify(content-value)
    if (content-value == start)
        justify-content flex-start

    if (content-value == end)
        justify-content flex-end

    if (content-value == center)
        justify-content center

    if (content-value == between)
        justify-content space-between

    if (content-value == around)
        justify-content space-around

// extends the mixin :)
for i in $arrayJustify
  .justify-{i}
    mq-justify(i)

@media (min-width: 576px)
  for i in $arrayJustifySm
    .justify-sm-{i}
      mq-justify(i)

@media (min-width: 768px)
  for i in $arrayJustifyMd
    .justify-md-{i}
      mq-justify(i)

@media (min-width: 992px)
  for i in $arrayJustifyLg
    .justify-lg-{i}
      mq-justify(i)

@media (min-width: 1200px)
  for i in $arrayJustifyXl
    .justify-xl-{i}
      mq-justify(i)

/* Flex Itens
------------------------------------------------*/

// mixin
mq-vertical-align(vertical-value)
    if (vertical-value == start)
        align-items flex-start

    if (vertical-value == center)
        align-items center

    if (vertical-value == end)
        align-items flex-end

// extends the mixin :)
for i in $arrayAlign
  .vertical-align-{i}
    mq-vertical-align(i)

@media (min-width: 576px)
  for i in $arrayAlignSm
    .vertical-align-sm-{i}
      mq-vertical-align(i)

@media (min-width: 768px)
  for i in $arrayAlignMd
    .vertical-align-md-{i}
      mq-vertical-align(i)

@media (min-width: 992px)
  for i in $arrayAlignLg
    .vertical-align-lg-{i}
      mq-vertical-align(i)

@media (min-width: 1200px)
  for i in $arrayAlignXl
    .vertical-align-xl-{i}
      mq-vertical-align(i)
